# mostly-shamelessly copied from James Turland [https://github.com/JamesTurland/JimsGarage/tree/main/Torrent-VPN]
version: "3"
services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: ${DEV_PREFIX}gluetun
    # Hostname to use for container, required in some instances for the rest of the stack to each other endpoints
    hostname: gluetun
    # line above must be uncommented to allow external containers to connect.
    # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/connect-a-container-to-gluetun.md#external-container-to-gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - "${ALT_P2P_IN:-6881}:6881" #qbittorrent P2P
      - "${ALT_P2P_IN:-6881}:6881/udp" #qbittorrent P2P
      # - 9117:9117 # Jackett
      - "${ALT_QB:-8085}:${ALT_QB:-8085}" # qbittorrent webbUI
      - "${ALT_SONARR:-8989}:8989" # Sonarr
      - "${ALT_PROWLARR:-9696}:9696" # Prowlarr
      - "${ALT_RADARR:-7878}:7878" # Radarr
      # - "${ALT_FLARE:-8191:8191}" # Flaresolver
    volumes:
      - "${MOUNT_ROOT}/docker/arr-stack/gluetun:/gluetun"
    environment:
      # See https://github.com/qdm12/gluetun-wiki/tree/main/setup#setup
      - VPN_SERVICE_PROVIDER=private internet access
      - OPENVPN_USER=${PIA_USERNAME}
      - OPENVPN_PASSWORD=${PIA_PASSWORD}
      - SERVER_REGIONS=Netherlands,Norway,Switzerland

      # - SERVER_CATEGORIES=P2P #only seems to work for nordVPN
      # Wireguard:
      # - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY} # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/providers/nordvpn.md#obtain-your-wireguard-private-key
      # - WIREGUARD_ADDRESSES=10.5.0.2/32
      # Timezone for accurate log times
      - TZ=Etc/UTC
      # Server list updater
      # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
      - UPDATER_PERIOD=24h
      - PUID=1000
      - PGID=1000

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: ${DEV_PREFIX}qbittorrent
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=${ALT_QB:-8085}
    volumes:
      - "${MOUNT_ROOT}/docker/arr-stack/qbittorrent:/config"
      - "${MOUNT_ROOT}/downloads:/downloads"
    depends_on:
      - gluetun
    restart: always

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: ${DEV_PREFIX}sonarr
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - "${MOUNT_ROOT}/docker/arr-stack/sonarr/data:/config"
      - "${MOUNT_ROOT}/media/tvseries:/tv" #optional
      - "${MOUNT_ROOT}/downloads:/downloads" #optional
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: ${DEV_PREFIX}radarr
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - "${MOUNT_ROOT}/docker/arr-stack/radarr/data:/config"
      - "${MOUNT_ROOT}/media/movies:/movies" #optional
      - "${MOUNT_ROOT}/downloads:/downloads" #optional
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: ${DEV_PREFIX}prowlarr
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - "${MOUNT_ROOT}/docker/arr-stack/prowlarr/data:/config"
    restart: unless-stopped

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: ${DEV_PREFIX}plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      # - PLEX_CLAIM= #optional
      - TZ=Etc/UTC
      - VERSION=docker
      #commenting out nvidia for amd integrated env
      # - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - "${MOUNT_ROOT}/docker/arr-stack/plex_config:/config"
      - "${MOUNT_ROOT}/media/movies:/Movies"
      - "${MOUNT_ROOT}/media/tvseries:/TV"
      - "/dev/dri:/dev/dri"
    restart: always
    security_opt:
      - no-new-privileges:true
    #don't want plex in dev
    profiles:
      - run-plex
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: amd
    #           count: all
    #           capabilities: [gpu]

  # flaresolverr:
  #   # DockerHub mirror flaresolverr/flaresolverr:latest
  #   image: ghcr.io/flaresolverr/flaresolverr:latest
  #   container_name: ${DEV_PREFIX}flaresolverr
  #   network_mode: "service:gluetun"
  #   environment:
  #     - LOG_LEVEL=${LOG_LEVEL:-info}
  #     - LOG_HTML=${LOG_HTML:-false}
  #     - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
  #     - TZ=Etc/UTC
  #   restart: unless-stopped
